AWSTemplateFormatVersion: '2010-09-09'
Description: 'Stage 2: Private Subnets and NAT Gateway'

Parameters:
  Stage1StackName:
    Type: String
    Description: The name of the Stage 1 stack
    Default: "insurance-api-network-stage1"

  PrivateSubnet1CIDR:
    Type: String
    Default: "10.0.11.0/24"
    Description: CIDR block for Private Subnet 1.

  PrivateSubnet2CIDR:
    Type: String
    Default: "10.0.12.0/24"
    Description: CIDR block for Private Subnet 2.

Resources:
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Fn::ImportValue: !Sub "${Stage1StackName}-VpcId"
      CidrBlock: !Ref PrivateSubnet1CIDR
      AvailabilityZone: !Select [0, !GetAZs ""]
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: InsuranceAPIPrivateSubnet1

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Fn::ImportValue: !Sub "${Stage1StackName}-VpcId"
      CidrBlock: !Ref PrivateSubnet2CIDR
      AvailabilityZone: !Select [1, !GetAZs ""]
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: InsuranceAPIPrivateSubnet2

  EIPforNAT:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NATGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt EIPforNAT.AllocationId
      SubnetId:
        Fn::ImportValue: !Sub "${Stage1StackName}-PublicSubnet1Id"
      Tags:
        - Key: Name
          Value: InsuranceAPINATGateway

Outputs:
  PrivateSubnet1Id:
    Description: Private Subnet 1 ID
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub "${AWS::StackName}-PrivateSubnet1Id"

  PrivateSubnet2Id:
    Description: Private Subnet 2 ID
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub "${AWS::StackName}-PrivateSubnet2Id"

  NATGatewayId:
    Description: NAT Gateway ID
    Value: !Ref NATGateway
    Export:
      Name: !Sub "${AWS::StackName}-NATGatewayId"
